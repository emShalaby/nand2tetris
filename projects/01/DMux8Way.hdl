// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    
    Not(in=sel[0] , out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);
    
    And(a=notsel0 , b=notsel1 , out=ns0andns1);
    And(a=notsel2 , b=ns0andns1 , out=tempa);
    And(a=in , b=tempa , out=a);

    
    And(a=sel[0] , b=notsel1 , out=s0andns1);
    And(a=notsel2 , b=s0andns1 , out=tempb);
    And(a=in , b=tempb , out=b);
    
    And(a=notsel0, b=sel[1] , out=ns0ands1);
    And(a=notsel2 , b=ns0ands1 , out=tempc);
    And(a=in , b=tempc , out=c);
    
    And(a=sel[0] , b=sel[1] ,out=s0ands1);
    And(a=notsel2 , b=s0ands1 , out=tempd);
    And(a=in , b=tempd , out=d);
    
    And(a=sel[2] , b=ns0andns1 , out=tempe);
    And(a=in , b=tempe , out=e);
    
    And(a=sel[2] , b=s0andns1 , out=tempf);
    And(a=in , b=tempf , out=f);
    
    And(a=sel[2] , b=ns0ands1 , out=tempg);
    And(a=in , b=tempg , out=g);
    
    And(a=sel[2] , b=s0ands1 , out=temph);
    And(a=in , b=temph , out=h);
    
}